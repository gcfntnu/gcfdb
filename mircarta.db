#-*- mode:snakemake -*-

# config
extra_conf_fn = srcdir('mircarta.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh) or {}
        update_config2(config, c)
        
MIRCARTA_RELEASE = str(config['db'].get('mircarta', {}).get('release', '22'))
ORG = config.get('organism', 'homo_sapiens')
MIR_ORG = {'homo_sapiens': 'hsa',
           'human': 'hsa',
           'hsa': 'hsa',
           'mus_musculus': 'mmu',
           'mouse': 'mmu',
           'mmu': 'mmu',
           'rattus_norvegicus': 'rno',
           'rat': 'rno',
           'rno': 'rno'}

MIRCARTA_URL = 'https://mircarta.cs.uni-saarland.de/mircarta/static/downloads/{}'.format(MIRCARTA_RELEASE)
MIRCARTA_EXT = join(EXT_DIR, 'mircarta', ORG, MIRCARTA_RELEASE)



rule mircarta_hairpin_fasta:
    params:
        url = MIRCARTA_URL,
        mircarta_org = lambda wildcards: MIR_ORG[wildcards.org]
    output:
        join(MIRCARTA_EXT, 'fasta', 'hairpin.fa')
    shell:
        """wget {params.url}/{params.mircarta_org}_precursors.fa | sed 's/U/T/g' > {output}"""
        
rule mircarta_mature_fasta:
    params:
        url = MIRCARTA_URL,
        mircarta_org = lambda wildcards: MIR_ORG[wildcards.org]
    output:
        join(MIRCARTA_EXT, 'fasta', 'mature.fa')
    shell:
        """wget {params.url}/{params.mircarta_org}_mirnas.fa | sed 's/U/T/g' > {output}"""

rule mircarta_gff:        
    params:
        url = MIRCARTA_URL,
        mircarta_org = lambda wildcards: MIR_ORG[wildcards.org]
    output:
        join(MIRCARTA_EXT, 'genes', 'genes.gff3')
    shell:
        'wget -O - {params.url}/{params.mircarta_org}.gff3 > {output}'
