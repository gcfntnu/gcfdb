#-*- mode:snakemake -*-
"""QIMME2 classifiers


"""
from os.path import join
# libprep

librep_conf_fn = srcdir('librep.config')
if os.path.exists(librprep_conf_fn):
    with open(librep_conf_fn) as fh:
        ALL_LIBREP  = yaml.load(fh) or {}
LIBREPS_16S = ['16S Metagenomic Sequencing Library Prep', 'QIAseq 16S ITS Region Panels']

DB = ['silva', 'greengenes']
GG_RELEASES = ['13_8']
SILVA_RELEASES = ['132']
LEVELS = ['99']

#QIASEQ_REGIONS = ['V1V2', 'V2V3', 'V4V5', 'V5V7', 'V7V9', 'ITS']
QIASEQ_REGIONS = list(LIBREPS_16S['QIAseq 16S ITS Region Panels']['primers'].keys())
QIASEQ_REGIONS.remove('ITS')
#ILMN_REGIONS = ['V4']
ILMN_REGIONS = list(LIBREPS_16S['16S Metagenomic Sequencing Library Prep']['primers'].keys())

rule prebuild_classifiers:
    params:
        url_1 = 'https://data.qiime2.org/2019.10/common/silva-132-99-nb-classifier.qza',
        url_2 = 'https://data.qiime2.org/2019.10/common/gg-13-8-99-nb-classifier.qza',
    output:
       out_1 = join(EXT_DIR, 'silva', '132', 'qiime2', 'classifiers', 'universal', 'all_regions', 'silva_132_99.qza'),
       out_2 = join(EXT_DIR, 'greengenes', '13_8', 'qiime2', 'classifiers', 'universal', 'all_regions', 'greengenes_13_8_99.qza')
    shell:
        """
        wget {params.url_1} -O- > {output.out_1}
        wget {params.url_2} -O- > {output.out_2}
        """

rule build_q2_classifer:
    input:
        ref = join(EXT_DIR, '{db}', '{release}', 'fasta', '{level}', 'otus.fa'),
        taxa = join(EXT_DIR, '{db}', '{release}', 'anno', '{level}', 'otus_taxonomy.txt')
    params:
        script = srcdir('scripts/train_classifier.py'),
        p1 = lambda input, wildcards: LIBPREP['primers']['forward'][wildcards.region],
        p2 = lambda input, wildcards: LIBPREP['primers']['reverse'][wildcards.region],
        libprep = lambda input, wildcards: LIBPREP['name']
    output:
        join(EXT_DIR, '{db}', '{release}', 'qiime2', 'classifiers', '{librep}', '{region}', '{db}_{release}_{level}_{region}.qza')
    singularity:
        'docker://' + config['docker']['qiime2']
    shell:
        'python {params.script} '
        '--fasta {input.ref} '
        '--taxa {input.taxa} '
        '--f-primer {params.p1} '
        '--r-primer {params.p2} '
        '--p-trunc-len 500 '
        '--p-min-length 100 '
        '--p-max-length 600 '
        '--output {output} '

rule q2_classifiers_all:
    input:
        expand(join(EXT_DIR, 'silva', '{release}', 'qiime2', 'classifiers', 'QIAseq 16S ITS Region Panels', '{region}', '{db}_{release}_{level}_{region}.qza'),
               relase=SILVA_RELEASES, level=LEVELS, region=QIASEQ_REGIONS),
        expand(join(EXT_DIR, 'greengenes', '{release}', 'qiime2', 'classifiers', 'QIAseq 16S ITS Region Panels', '{region}', '{db}_{release}_{level}_{region}.qza'),
               relase=GG_RELEASES, level=LEVELS, region=QIASEQ_REGIONS)
        join(EXT_DIR, 'silva', '132', 'qiime2', 'classifiers', 'universal', 'all_regions', 'silva_132_99.qza'),
        join(EXT_DIR, 'greengenes', '13_8', 'qiime2', 'classifiers', 'universal', 'all_regions', 'greengenes_13_8_99.qza'),
        join(EXT_DIR, 'unite', '8_2', 'qiime2', 'classifiers', 'universal', 'ITS', 'unite_8_2_dynamic_ITS.qza')
