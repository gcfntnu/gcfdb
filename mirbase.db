#-*- mode:snakemake -*-
from datetime import datetime

# config
extra_conf_fn = srcdir('mirbase.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh) or {}
        update_config2(config, c)
        
MIRBASE_RELEASE = str(config['db']['mirbase'].get('release', '22'))
ORG = config.get('organism', 'homo_sapiens')
MIR_ORG = {'homo_sapiens': 'hsa',
           'human': 'hsa',
           'hsa': 'hsa',
           'mus_musculus': 'mmu',
           'mouse': 'mmu',
           'mmu': 'mmu',
           'rattus_norvegicus': 'rno',
           'rat': 'rno',
           'rno': 'rno'}

MIRBASE_EXT = join(EXT_DIR, 'mirbase', ORG, MIRBASE_RELEASE)

URLS = {'hairpin': 'ftp://mirbase.org/pub/mirbase/{}/hairpin.fa.gz'.format(MIRBASE_RELEASE),
        'mature': 'ftp://mirbase.org/pub/mirbase/{}/mature.fa.gz'.format(MIRBASE_RELEASE),
        'gff': 'ftp://mirbase.org/pub/mirbase/{}/genomes'.format(MIRBASE_RELEASE)
}
    

rule mirbase_hairpin_fasta:
    params:
        url = URLS['hairpin'],
        mirbase_org = MIR_ORG[ORG]
    output:
        fasta = join(MIRBASE_EXT, 'fasta', 'hairpin.fa')
    shell:
        """wget {params.url} -O- | gunzip -c | grep -A 1 "^>{params.mirbase_org}" | grep -v "^-" | sed 's/U/T/g' > {output.fasta}"""

rule mirbase_hairpin_log:
    params:
        url = URLS['hairpin']
    output:
        log = join(MIRBASE_EXT, 'logs', 'hairpin.log')
    run:
        date = datetime.now().strftime("%d-%m-%Y")
        with open(output.log, 'w') as fh:
            fh.write('Mirbase hairpin,{},{},{}\n'.format(MIRBASE_RELEASE, params.url, date))   

        
rule mirbase_mature_fasta:
    params:
        url = URLS['mature'],
        mirbase_org = MIR_ORG[ORG]
    output:
        log = join(MIRBASE_EXT, 'fasta', 'mature.fa')
    shell:
        """
        wget {params.url} -O- | gunzip -c | grep -A 1 "^>{params.mirbase_org}" | grep -v "^-" | sed 's/U/T/g' > {output}
        """
        
rule mirbase_mature_log:
    params:
        url = URLS['hairpin']
    output:
        log = join(MIRBASE_EXT, 'logs', 'mature.log')
    run:
        date = datetime.now().strftime("%d-%m-%Y")
        with open(output.log, 'w') as fh:
            fh.write('Mirbase mature,{},{},{}\n'.format(MIRBASE_RELEASE, params.url, date))   

rule mirbase_gff:        
    params:
        url = URLS['gff'],
        mirbase_org = MIR_ORG[ORG]
    output:
        join(MIRBASE_EXT, 'genes', 'genes.gff3')
    shell:
        'wget -O - {params.url}/{params.mirbase_org}.gff3 > {output}'

rule mirbase_gff_log:
    params:
        url = URLS['hairpin']
    output:
        log = join(MIRBASE_EXT, 'logs', 'gff.log')
    run:
        date = datetime.now().strftime("%d-%m-%Y")
        with open(output.log, 'w') as fh:
            fh.write('Mirbase gff,{},{},{}\n'.format(MIRBASE_RELEASE, params.url, date))
            
rule mirbase_all:
    input:
        join(MIRBASE_EXT, 'fasta', 'hairpin.fa'),
        join(MIRBASE_EXT, 'fasta', 'mature.fa'),
        join(MIRBASE_EXT, 'genes', 'genes.gff3'),
        join(MIRBASE_EXT, 'logs', 'hairpin.log'),
        join(MIRBASE_EXT, 'logs', 'mature.log'),
        join(MIRBASE_EXT, 'logs', 'gff.log')
                
